#!/usr/bin/env python3

import os

header = '/* Autogenerated, do not edit. All changes will be undone. */\n#include <stdint.h>\nnamespace res {\n'
body = '/* Autogenerated, do not edit. All changes will be undone. */\n#include "resources.h"\nnamespace res {\n'

for fn in sorted(os.listdir("resources/")):
	if fn.startswith("x-"): continue
	with open("resources/"+fn, "rb") as f:
		sfn = fn.split(".")[0]
		b = bytearray(f.read()) # pointless bytearray conversion because in python2, bytes is str and indexing that is str, not int
		header += "extern const uint8_t "+sfn+"["+str(len(b))+"];\n"
		body += "extern const uint8_t "+sfn+"["+str(len(b))+"] = {\n"
		body += ",".join(str(n) for n in b)
		body += "};\n"

header += "}\n"
body += "}\n"

with open("resources.h", "wt") as f: f.write(header)
with open("resources.cpp", "wt") as f: f.write(body)
